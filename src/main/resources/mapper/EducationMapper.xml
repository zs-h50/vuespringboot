<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.EducationMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.Education">
    <id column="e_id" jdbcType="BIGINT" property="eId" />
    <result column="c_id" jdbcType="BIGINT" property="cId" />
    <result column="t_id" jdbcType="BIGINT" property="tId" />
    <result column="e_year" jdbcType="INTEGER" property="eYear" />
    <result column="e_semester" jdbcType="INTEGER" property="eSemester" />
    <result column="e_fettle" jdbcType="INTEGER" property="eFettle" />
    <result column="e_remark" jdbcType="VARCHAR" property="eRemark" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <association property="course" javaType="Course">
    	<id column="c_id" jdbcType="BIGINT" property="cId" />
	    <result column="t_id" jdbcType="BIGINT" property="tId" />
	    <result column="c_no" jdbcType="VARCHAR" property="cNo" />
	    <result column="c_name" jdbcType="VARCHAR" property="cName" />
	    <result column="c_fettle" jdbcType="INTEGER" property="cFettle" />
	    <result column="c_remark" jdbcType="VARCHAR" property="cRemark" />
    </association>
    <association property="teacher" javaType="Teacher">
    	<id column="t_id" jdbcType="BIGINT" property="tId" />
	    <result column="t_no" jdbcType="VARCHAR" property="tNo" />
	    <result column="t_name" jdbcType="VARCHAR" property="tName" />
	    <result column="t_gender" jdbcType="INTEGER" property="tGender" />
	    <result column="t_phone" jdbcType="VARCHAR" property="tPhone" />
	    <result column="t_email" jdbcType="VARCHAR" property="tEmail" />
	    <result column="t_birthday" jdbcType="DATE" property="tBirthday" />
	    <result column="t_card" jdbcType="VARCHAR" property="tCard" />
	    <result column="t_school" jdbcType="VARCHAR" property="tSchool" />
	    <result column="t_year" jdbcType="INTEGER" property="tYear" />
	    <result column="t_education" jdbcType="INTEGER" property="tEducation" />
	    <result column="t_degree" jdbcType="INTEGER" property="tDegree" />
	    <result column="t_major" jdbcType="VARCHAR" property="tMajor" />
	    <result column="t_fettle" jdbcType="INTEGER" property="tFettle" />
	    <result column="t_remark" jdbcType="VARCHAR" property="tRemark" />
    </association>
    <association property="fclass" javaType="Fclass">
	    <id column="c_id" jdbcType="BIGINT" property="cId" />
	    <result column="classname" jdbcType="VARCHAR" property="classname" />
	    <result column="c_number" jdbcType="INTEGER" property="cNumber" />
    </association>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    e_id, c_id, t_id, e_year, e_semester, e_fettle, e_remark, course_id
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.pojo.EducationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from education
    where e_id = #{eId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from education
    where e_id = #{eId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.pojo.EducationExample">
    delete from education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.Education">
    insert into education (e_id, c_id, t_id, e_year, 
      e_semester, e_fettle, e_remark, 
      course_id)
    values (#{eId,jdbcType=BIGINT}, #{cId,jdbcType=BIGINT}, #{tId,jdbcType=BIGINT}, #{eYear,jdbcType=INTEGER}, 
      #{eSemester,jdbcType=INTEGER}, #{eFettle,jdbcType=INTEGER}, #{eRemark,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.Education">
    insert into education
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eId != null">
        e_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="tId != null">
        t_id,
      </if>
      <if test="eYear != null">
        e_year,
      </if>
      <if test="eSemester != null">
        e_semester,
      </if>
      <if test="eFettle != null">
        e_fettle,
      </if>
      <if test="eRemark != null">
        e_remark,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eId != null">
        #{eId,jdbcType=BIGINT},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=BIGINT},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=BIGINT},
      </if>
      <if test="eYear != null">
        #{eYear,jdbcType=INTEGER},
      </if>
      <if test="eSemester != null">
        #{eSemester,jdbcType=INTEGER},
      </if>
      <if test="eFettle != null">
        #{eFettle,jdbcType=INTEGER},
      </if>
      <if test="eRemark != null">
        #{eRemark,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.pojo.EducationExample" resultType="java.lang.Long">
    select count(*) from education
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update education
    <set>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=BIGINT},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=BIGINT},
      </if>
      <if test="record.tId != null">
        t_id = #{record.tId,jdbcType=BIGINT},
      </if>
      <if test="record.eYear != null">
        e_year = #{record.eYear,jdbcType=INTEGER},
      </if>
      <if test="record.eSemester != null">
        e_semester = #{record.eSemester,jdbcType=INTEGER},
      </if>
      <if test="record.eFettle != null">
        e_fettle = #{record.eFettle,jdbcType=INTEGER},
      </if>
      <if test="record.eRemark != null">
        e_remark = #{record.eRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update education
    set e_id = #{record.eId,jdbcType=BIGINT},
      c_id = #{record.cId,jdbcType=BIGINT},
      t_id = #{record.tId,jdbcType=BIGINT},
      e_year = #{record.eYear,jdbcType=INTEGER},
      e_semester = #{record.eSemester,jdbcType=INTEGER},
      e_fettle = #{record.eFettle,jdbcType=INTEGER},
      e_remark = #{record.eRemark,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.Education">
    update education
    <set>
      <if test="cId != null">
        c_id = #{cId,jdbcType=BIGINT},
      </if>
      <if test="tId != null">
        t_id = #{tId,jdbcType=BIGINT},
      </if>
      <if test="eYear != null">
        e_year = #{eYear,jdbcType=INTEGER},
      </if>
      <if test="eSemester != null">
        e_semester = #{eSemester,jdbcType=INTEGER},
      </if>
      <if test="eFettle != null">
        e_fettle = #{eFettle,jdbcType=INTEGER},
      </if>
      <if test="eRemark != null">
        e_remark = #{eRemark,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where e_id = #{eId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.Education">
    update education
    set c_id = #{cId,jdbcType=BIGINT},
      t_id = #{tId,jdbcType=BIGINT},
      e_year = #{eYear,jdbcType=INTEGER},
      e_semester = #{eSemester,jdbcType=INTEGER},
      e_fettle = #{eFettle,jdbcType=INTEGER},
      e_remark = #{eRemark,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER}
    where e_id = #{eId,jdbcType=BIGINT}
  </update>
  
  <select id="getOneCourse" resultMap="BaseResultMap">
  	  	select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where e.c_id =#{cId} and e.course_id = #{courseId} and t_fettle
  </select>
  
  <select id="getAll" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  </select>
  
  <!-- 点击查看按钮查看老师所授课的班级 -->
    <select id="getTeacherFclass" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where t.t_id = #{tId}
  </select>
  
    <!-- 点击查看按钮查看课程所的班级 -->
    <select id="getCourseFclass" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where c.c_id = #{cId}
  </select>
  
  <select id="getTeacherCourse" resultMap="BaseResultMap">
  	  	select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where t.t_no = #{tNo}
  </select>
  
    <select id="getStudentCourse" resultMap="BaseResultMap">
  	  	select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,s.s_no,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = e.course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		left join student as s on s.c_id = f.c_id
  		where s.s_no = #{sNo}
  </select>
  
  <select id="geteSemester" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where e.e_semester =#{eSemester} and t.t_no = #{account}
  </select>
  
    <select id="geteSemestertwo" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		where e.e_fettle =#{eFettle} and t.t_no = #{account}
  </select>
  
    <select id="getStudenteSemester" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		left join student as s on f.c_id = s.c_id 
  		where e.e_semester =#{eSemester} and s.s_no = #{account}
  </select>
  
    <select id="getStudenteSemestertwo" resultMap="BaseResultMap">
  		select e.e_id, e.c_id, e.t_id, e.e_year, e.e_semester, e.e_fettle, e.e_remark, e.course_id,c.c_id,
  		c.c_no,c.c_name,f.c_id,f.classname,f.c_number,t.t_id,t.t_name 
  		from education as e 
  		left join course as c 
  		on c.c_id = course_id
  		left join fclass as f
  		on e.c_id = f.c_id
  		left join teacher as t
  		on t.t_id = e.t_id
  		left join student as s on f.c_id = s.c_id 
  		where e.e_fettle =#{eFettle} and s.s_no = #{account}
  </select>
  
</mapper>